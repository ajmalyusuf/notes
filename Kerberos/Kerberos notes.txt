Kerberos notes:

Its an Authentication protocol for Trusted Hosts on an Untrusted Networtk

Based on :
1) No PASSWORD passes through network
2) Trust only someone who has a secure ticket to access the service
3) Single Sign-On - user needs to enter password only once for a session

yum install krb5-libs.x86_64 krb5-workstation.x86_64 krb5-auth-dialog.x86_64 krb5-server.x86_64

To list and grep tools installed in a package :

rpm -ql <package_name> | grep <part of tool_name>
rpm -ql krb5-server.x86_64 | grep kdb

To create the database
kdb5_util create -s

The database is created in the folder :
cd /var/kerberos/
As a directory called principal

To destroy:
kdb5_util destroy -f
** Database '/var/kerberos/krb5kdc/principal' destroyed.

Three files to be noted:
/var/kerberos/krb5kdc/kadm5.acl
	This file provides the ACL for accssing the KDC
	If it has "*/admin@REALM", then any user principal created as username/admin@REALM can administer KDC
	Ambari needs this.
/var/kerberos/krb5kdc/kdc.conf
/etc/krb5.conf

Open kadm5.acl and kdc.conf and ensure that the REALM is correct.

Modify the conf file : /etc/krb5.conf
To reflect the host/node where the KDC / Admin Servers are running
Also ensure the REALM is matching the ones given in the above 2 files.

[realms]
 EXAMPLE.COM = {
  kdc = hdp-s2.hw.com
  admin_server = hdp-s2.hw.com
 }

Starting the KDC
/etc/rc.d/init.d/krb5kdc start
/etc/rc.d/init.d/kadmin start

To start at bootup :
chkconfig krb5kdc on
chkconfig kadmin on

You can add to chkconfig if not already added:
chkconfig --add krb5kdc
chkconfig --add kadmin

Check status:
service krb5kdc status
service krb5kdc start
service krb5kdc stop

Use this command on the KDC Server node, on the console enter the addprinc command:
kadmin.local
kadmin.local:  addprinc -randkey HTTP/hdp-m1.hw.com@EXAMPLE.COM

Use this command on the KDC Server node, on the console enter the addprinc command:
kadmin.local
kadmin.local:  addprinc -randkey HTTP/hdp-m1.hw.com@EXAMPLE.COM


kadmin.local
Authenticating as principal root/admin@EXAMPLE.COM with password.
kadmin.local:  xst -k spnego.service.keytab HTTP/hdp-m1.hw.com

klist -kte /etc/security/keytabs/spnego.service.keytab

Automatically creating database and keytab files:

cd /var/lib/ambari-server/resources/scripts

run :

./kerberos-setup.sh <csv file generated by Ambari> ~/.ssh/id_rsa
./kerberos-setup.sh kerberos_latest.csv ~/.ssh/id_rsa

Kerberos Prerequisites Testing:

Hostname/IP Forward/Reverse resolution
getent hosts <hostname or ip>

Time Sync:
date - run on each node and should not give a difference more than few seconds
ntpq -nc lpeers - run on each node and ensure atleast one server has a * prefix

Kerberos Package Version:
rpm -qa | grep krb5 - all nodes to have same version (at least the first 2 versions and close 3rd number)

Process Running:
service krb5kdc {status, start, stop, restart} (as root)
service kadmin {status, start, stop, restart} (as root)

=======KADMIN===========
Administering KDC:
kadmin -p <principal> OR kadmin.local (works only from KDC server)
type "?" inside the admin prompt to get help
Eg: kadmin.local: modprinc -maxrenewlife "11 day 1 hour" admin/admin@HW.COM
kadmin -p admin/admin@HW.COM
Password is admin
=======KADMIN===========

Generating TGT:
kinit -kt /etc/security/keytabs/hdfs.headless.keytab hdfs-HDP22@HW.COM
This will be caches (Credential Cache) to /tmp/krb5cc_xxx file

Checking the Credential Cache:
klist
klist -ef
f is for Flags:


Checking the keytab:
klist -kte /etc/security/keytabs/hdfs.headless.keytab

Your can check the version number on the keytab and then using the kadmin->getprinc vesion number in DB, if they are different, 
need to regenerate the keytab




